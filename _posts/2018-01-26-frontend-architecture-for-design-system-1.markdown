---
layout: post
title: 前端架构设计-学习笔记(一)
date: 2018-1-26 12:06:43
---

### 响应式网站(responsive web design)

> 最早出现的m.网站,会导致开发人员维护两套代码,很难保证数据和PC主站保持一致,或者部分功能缺失而迫使用户切换到桌面设备,Iphone的出现,使得我们作为开发者,不能再对用户和他们用来浏览网站的设备做出任何假设,由此衍生出了响应式网站的概念

响应式包含以下内容
- 流式网络
  用基于百分比的宽度代替像素的宽度
- 自适应图片
  用100%宽度的图片填充它们的容器
- 媒体查询
  允许不同的窗口大小使用不同的样式

### 前端架构的种子

很多项目的流程是:先讨论设计方案、在开发功能、最后把前端人员加入到项目中,经历过几次这样的经历后,当我们尝试去解构项目中的前端代码时,会异常痛苦,我们一直在填坑,还在奢望在技术债务拖垮我们之前,把网站发布出去

随着项目的复杂程度日益增加,这样的流程不是长久之计,那么,我们能不能改变这种开发流程,把前端开发当做一个值得做出战略规划和有投资价值的关键元素,于是,前端架构的种子就此埋下

### 前端架构原则

> 前端架构是一系列工具和流程的集合,旨在提升前端代码的质量,并且实现高效、可持续的工作流

- 体系设计

  设计一个所有前端人员都要遵循的系统规范,能够清晰的描绘出产品和代码的最终形态
  一旦有了系统设计的规范,项目就有了可以衡量代码质量的标准,一个精心设计的系统,应该具备完善的检验机制,并做出适当的取舍,以保证系统中的代码具有实质的价值,而不是简单的堆砌

- 工作规划

  前端架构的目标是设计出能够流畅运转的系统,这个系统不仅能高效快速的启动,还可以通过语言分析、测试用例、文档记录等方法持续提供有效的反馈,并且大幅减少由于重复劳作而产生的人为错误

- 监督跟进

  前端架构绝不是一个一劳永逸的工作,没有任何一个设计在一开始就是完美的,也没有任何计划可以一步到位
  客户和开发人员的需求会随着时间而改变,来某个阶段运行的很好的开发流程,随后也可能需要重新调整,以便提高效率、较少错误

### 愿望清单

- 模块化内容

  尽可能复用小的组件,而不是几十个甚至上百个不同的内容块

- 全面测试

  大量的前端代码融合到主干master分支之后,导致几个月前的代码出现运行的问题,所以需要一个像测试后端代码一样测试我们的前端框架,达到一样的代码覆盖水平

- 流式处理

  引入git工作流程,管理代码

- 详细的文档

  新的架构应该有详细的文档,让每一个接触到这个架构的人(不仅仅是前端开发)都能看得懂

### 前端架构的核心

- 代码

  所有网站都是由一堆文本文件和资源文件组成的,当我们面对制作网站而产生的大量代码时,就会发现,为代码和资源设定一个期望是多么重要

- 流程

  既然已经过了FTP上传的时代,那么现在重要的时思考怎么用工具和流程构建一个高效且避免出错的工作流

- 测试

  要构建一个可扩展和可持续优化的系统,必须保证新代码与老代码能够很好的兼容,创建覆盖面广的测试方案,能够确保老代码还能正常的运作

- 文档

  如果不是团队中重要的成员要离开,我们几乎都不会意识到文档的重要性,等到那个时候,大家不得不停下手头的工作,优先编写所有的文档
  作为前端架构师,你要善于在项目开发的同时编写良好的文档
